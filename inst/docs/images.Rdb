<?xml version="1.0"?>
<article xmlns:r="http://www.r-project.org"
         xmlns:xi="http://www.w3.org/2003/XInclude">

<articleinfo>

<title></title>

<author><firstname>Duncan</firstname><surname>Temple Lang</surname>
  <affiliation><orgname>University of California at Davis</orgname>
               <orgdiv>Department of Statistics</orgdiv>
  </affiliation>
</author>
</articleinfo>

<section>
<title>Adding Images to an Excel Worksheet</title>

<para>
We start with an empty Excel display and add a PNG file to the single worksheet.
We then add a second plot also.
We save this as Rplot.xsl and then explore the resulting xlsx archive in R.
<r:code>
library(RExcelXML)
f = system.file("SampleDocs", "Rplot.xsl", package = "RExcelXML")
wb = workbook(f)
sh = wb[[1]]
</r:code>

Looking at the XML 
<r:code>
sh@content
</r:code>
we can see a  node
<programlisting><![CDATA[
 <drawing r:id="rId1"/>
]]></programlisting>
We have to lookup the rId1  as a relationship.
We do this in the 
<filename>xl/worksheets/sheet1.xml.rels</filename>
file in the xlsx archive.
<q>What if there are multiple sheets? How do we know we are in the first sheet if it has 
a different name? <a>The names are still sheet1.xml, etc. but the human-readable name is in xl/workbooks.xml</q>
So let's look at the contents of the file:
<programlisting><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing" Target="../drawings/drawing1.xml"/>
</Relationships>
]]></programlisting>
Note that there is only one <xml:tag>drawing</xml:tag> in the worksheet
even though there are two plots.
Simiarly, within the relationships fole, there is a single <xml:tag>Relationship</xml:tag>
element.
The <xml:attr>Target</xml:attr> attribute for this <xml:tag>Relationship</xml:tag>
node points us to the XML file that tells us about the plots/drawing.
So we extract that with 
<ignore>
<r:code eval="false">
d = dirname("xl/worksheets/_rels/sheet1.xml.rels")
zipEntry("../drawings/drawing1.xml", base = d)
"xl/drawings/drawing1.xml"
</r:code>
</ignore>
<r:code>
as(wb, "ExcelArchive")[["xl/drawings/drawing1.xml"]]
<r:output><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xdr:wsDr xmlns:xdr="http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing" xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main">
  <xdr:twoCellAnchor editAs="oneCell">
    <xdr:from>
      <xdr:col>1</xdr:col>
      <xdr:colOff>520700</xdr:colOff>
      <xdr:row>3</xdr:row>
      <xdr:rowOff>0</xdr:rowOff>
    </xdr:from>
    <xdr:to>
      <xdr:col>9</xdr:col>
      <xdr:colOff>12700</xdr:colOff>
      <xdr:row>35</xdr:row>
      <xdr:rowOff>0</xdr:rowOff>
    </xdr:to>
    <xdr:pic>
      <xdr:nvPicPr>
        <xdr:cNvPr id="2" name="Picture 1" descr="foo.png"/>
        <xdr:cNvPicPr>
          <a:picLocks noChangeAspect="1"/>
        </xdr:cNvPicPr>
      </xdr:nvPicPr>
      <xdr:blipFill>
        <a:blip xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" r:embed="rId1">
          <a:extLst>
            <a:ext uri="{28A0092B-C50C-407E-A947-70E740481C1C}">
              <a14:useLocalDpi xmlns:a14="http://schemas.microsoft.com/office/drawing/2010/main" val="0"/>
            </a:ext>
          </a:extLst>
        </a:blip>
        <a:stretch>
          <a:fillRect/>
        </a:stretch>
      </xdr:blipFill>
      <xdr:spPr>
        <a:xfrm>
          <a:off x="1346200" y="571500"/>
          <a:ext cx="6096000" cy="6096000"/>
        </a:xfrm>
        <a:prstGeom prst="rect">
          <a:avLst/>
        </a:prstGeom>
      </xdr:spPr>
    </xdr:pic>
    <xdr:clientData/>
  </xdr:twoCellAnchor>
  <xdr:twoCellAnchor editAs="oneCell">
    <xdr:from>
      <xdr:col>9</xdr:col>
      <xdr:colOff>800100</xdr:colOff>
      <xdr:row>3</xdr:row>
      <xdr:rowOff>88900</xdr:rowOff>
    </xdr:from>
    <xdr:to>
      <xdr:col>17</xdr:col>
      <xdr:colOff>292100</xdr:colOff>
      <xdr:row>35</xdr:row>
      <xdr:rowOff>88900</xdr:rowOff>
    </xdr:to>
    <xdr:pic>
      <xdr:nvPicPr>
        <xdr:cNvPr id="3" name="Picture 2" descr="foo1.png"/>
        <xdr:cNvPicPr>
          <a:picLocks noChangeAspect="1"/>
        </xdr:cNvPicPr>
      </xdr:nvPicPr>
      <xdr:blipFill>
        <a:blip xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" r:embed="rId2">
          <a:extLst>
            <a:ext uri="{28A0092B-C50C-407E-A947-70E740481C1C}">
              <a14:useLocalDpi xmlns:a14="http://schemas.microsoft.com/office/drawing/2010/main" val="0"/>
            </a:ext>
          </a:extLst>
        </a:blip>
        <a:stretch>
          <a:fillRect/>
        </a:stretch>
      </xdr:blipFill>
      <xdr:spPr>
        <a:xfrm>
          <a:off x="8229600" y="660400"/>
          <a:ext cx="6096000" cy="6096000"/>
        </a:xfrm>
        <a:prstGeom prst="rect">
          <a:avLst/>
        </a:prstGeom>
      </xdr:spPr>
    </xdr:pic>
    <xdr:clientData/>
  </xdr:twoCellAnchor>
</xdr:wsDr>
]]></r:output>
</r:code>
This document has two <xml:tag>twoCellAnchor</xml:tag>
nodes and these represent our figures/plots.
Each of these has the following elements:
from, to, pic, clientData.
The from and to  provide the location of the image.
These have a col, colOff and row and rowOff elements.
The col and row are the (zero-based) indices of the column and row.
<q>The colOff and rowOff are in what units? English Metric Unit. These are from the edge of the specific row or column.
See <ulink url="http://polymathprogrammer.com/2009/11/30/how-to-insert-an-image-in-excel-open-xml/"/>.
An EMU is  1/360,000 of a centimeter and thus there are 914,400 EMUs per inch, and 12,700 EMUs per point.
A reasonable default is 96 pixels per inch</q>
The <xml:tag>pic</xml:tag> is the heart of the information about the picture.
(The <xml:tag>clientData</xml:tag> is empty.)
The <xml:tag>pic</xml:tag> has children
<xml:tag>nvPicPr</xml:tag>, <xml:tag>blipFill</xml:tag> and <xml:tag>spPr</xml:tag>.
The nvPicPr stands for non-visual properties.
This contains <xml:tag>cNvPr</xml:tag> node with its  id,  name and descr properties.
We can also add links and hover elements here.
</para>

<para>

We have to add xl/media/ and put the png/jpeg files there.
We have to create xl/drawings/drawing1.xml (or whatever)
and xl/drawings/_rels/drawing1.xml.
This connects the
values of blip/@r:embed attribute to the actual image:
<programlisting><![CDATA[
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/image" Target="../media/image1.png"/>
  <Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/image" Target="../media/image2.png"/>
</Relationships>
]]></programlisting>


</para>


<para>
The schema is available at
http://www.schemacentral.com/sc/ooxml/s-dml-picture.xsd.html
</para>

</section>
<section>
<title>Relationships</title>

<para>
See <ulink url="http://msdn.microsoft.com/en-us/library/bb266220(v=office.12).aspx"/> for information
about the structure of an Office document.
</para>


<para>
For an image in a worksheet, there are several relationships
and levels of indirection.
The sheet is  named "xl/worksheets/sheet1.xml" 
in the xlsx archive.
This has an entry
<programlisting><![CDATA[
  <drawing r:id="rId1"/>
]]></programlisting>
This identifier is to be resolved in the
relationships file.
This is found via
<r:code>
 f = "xl/worksheets/sheet1.xml" 
 sprintf("%s/_rels/%s.rels", dirname(f), basename(f))
</r:code>
This has the following content
<programlisting><![CDATA[
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship
      Id="rId1" 
      Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing" 
      Target="../drawings/drawing1.xml"/>
</Relationships>
]]></programlisting>
The single entry tells us to go to 
<r:code>
 f = "xl/worksheets/sheet1.xml" 
 target = "../drawings/drawing1.xml"
 sprintf("%s/%s", dirname(f), target)
</r:code>
That is "xl/drawings/drawing1.xml".
That document contains the information about 
where to locate the image and so on:
<programlisting><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xdr:wsDr xmlns:xdr="http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing" xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main">
  <xdr:twoCellAnchor editAs="oneCell">
    <xdr:from>
      <xdr:col>1</xdr:col>
      <xdr:colOff>457200</xdr:colOff>
      <xdr:row>1</xdr:row>
      <xdr:rowOff>38100</xdr:rowOff>
    </xdr:from>
    <xdr:to>
      <xdr:col>9</xdr:col>
      <xdr:colOff>203200</xdr:colOff>
      <xdr:row>34</xdr:row>
      <xdr:rowOff>101600</xdr:rowOff>
    </xdr:to>
    <xdr:pic>
      <xdr:nvPicPr>
        <xdr:cNvPr id="2" name="Picture 1" descr="xIs0yIs10.png"/>
        <xdr:cNvPicPr>
          <a:picLocks noChangeAspect="1"/>
        </xdr:cNvPicPr>
      </xdr:nvPicPr>
      <xdr:blipFill>
        <a:blip xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" r:embed="rId1"/>
        <a:stretch>
          <a:fillRect/>
        </a:stretch>
      </xdr:blipFill>
      <xdr:spPr>
        <a:xfrm>
          <a:off x="1282700" y="228600"/>
          <a:ext cx="6350000" cy="6350000"/>
        </a:xfrm>
        <a:prstGeom prst="rect">
          <a:avLst/>
        </a:prstGeom>
      </xdr:spPr>
    </xdr:pic>
    <xdr:clientData/>
  </xdr:twoCellAnchor>
</xdr:wsDr>
]]></programlisting>
The element we are most concerned about now is
the identity of the image  file.
This is in the <xml:tag>blip</xml:tag> node
<programlisting><![CDATA[
 <xdr:blipFill>
   <a:blip xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" r:embed="rId1"/>
  ...
 </xdr:blipFill>
]]></programlisting>
That again refers to another identifier "rId1" in the <xml:attr>r:embed </xml:attr>
attribute. So again, we lookup the relationship for this document
<r:code>
 f = "xl/drawings/drawing1.xml"
 sprintf("%s/_rels/%s.rels", dirname(f), basename(f))
</r:code> 
i.e. "xl/drawings/_rels/drawing1.xml.rels"
The contents of this document are
<programlisting><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/image" Target="../media/image1.png"/>
</Relationships>
]]></programlisting>
The single relationship leads us to the
file ../media/image1.png.
</para>

</section>
<section>
<title>Multiple Images</title>
<para>
Let's check this in the case that there is more than one image, and then with more than sheet.
pics.xlsx has a sheet with multiple images.
<r:code>
 x = system.file("SampleDocs", "pics.xlsx", package = "RExcelXML")
 e = excelDoc(x)
 e[["xl/worksheets/sheet1.xml"]]
</r:code>
Note that has a <xml:tag>legacyDrawing</xml:tag> element along with a <xml:tag>drawing</xml:tag>
element.
The relationship file (e[["xl/worksheets/_rels/sheet1.xml.rels"]]) contains
<programlisting><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">
  <Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing" Target="../drawings/vmlDrawing1.vml"/>
  <Relationship Id="rId3" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments" Target="../comments1.xml"/>
  <Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing" Target="../drawings/drawing1.xml"/>
</Relationships>
]]></programlisting>
Note that the first entry is rId2 and this has a vml (Vector Markup Language) file as a target.
This is the legacyDrawing content.
rId3 is a relationship that has nothing to do with drawings.
rId1 corresponds to ../drawings/drawing1.xml as before.
We get this with <r:expr>e[["xl/drawings/drawing1.xml"]]</r:expr>
and find the blip nodes:
<r:code>
blips = getNodeSet(e[["xl/drawings/drawing1.xml"]], "//a:blip", c(a="http://schemas.openxmlformats.org/drawingml/2006/main"))
</r:code>
We can get the identifiers as
<r:code>
blips = xpathSApply(e[["xl/drawings/drawing1.xml"]], "//a:blip", 
                    xmlGetAttr, "embed",
                      namespaces = c(a="http://schemas.openxmlformats.org/drawingml/2006/main"))
</r:code>
Sure enough, there are 4 of these, each a child of a <xml:tag>xdr:blipFill</xml:tag> node.
We can now find the associated JPEG/PNG files by looking in
<xml:tag>e[["xl/drawings/_rels/drawing1.xml.rels"]]</xml:tag>.
<r:code>
structure(xmlSApply(xmlRoot(e[["xl/drawings/_rels/drawing1.xml.rels"]]), xmlGetAttr, "Target"),
          names = xmlSApply(xmlRoot(e[["xl/drawings/_rels/drawing1.xml.rels"]]), xmlGetAttr, "Id"))
</r:code>
And hey presto we are done.
</para>

</section>

<section>
<title>Multiple Sheets, Multiple Images</title>

<para>
<r:code>
 x = system.file("SampleDocs", "pics.xlsx", package = "RExcelXML")
 e = excelDoc(x)
</r:code>
<r:code>
w = workbook(e)
sh = w[[2]]
</r:code>

</para>
</section>

</article>